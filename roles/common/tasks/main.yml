- name: Stop and disable ufw
  become: yes
  systemd:
    name: ufw
    state: stopped
    enabled: no

- name: Create containerd config file
  become: yes
  copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/containerd.conf

- name: Load overlay and br_netfilter modules
  become: yes
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Create Kubernetes CRI sysctl config
  become: yes
  copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    dest: /etc/sysctl.d/99-kubernetes-cri.conf

- name: Update and install required packages
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release

- name: Add Docker GPG key
  become: yes
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /usr/share/keyrings/docker-archive-keyring.gpg

- name: Add Docker repository
  become: yes
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
    update_cache: yes

- name: Update apt cache
  become: yes
  ansible.builtin.apt:
    update_cache: yes

- name: Install containerd.io
  become: yes
  apt:
    name: containerd.io
    state: present
    update_cache: yes

- name: Create containerd config directory
  become: yes
  file:
    path: /etc/containerd
    state: directory

- name: Generate and save containerd config
  become: yes
  shell: containerd config default > /etc/containerd/config.toml

- name: Restart containerd service
  become: yes
  systemd:
    name: containerd
    state: restarted

- name: Disable swap
  become: yes
  command: swapoff -a

- name: Comment swap in /etc/fstab
  become: yes
  replace:
    path: /etc/fstab
    regexp: '^(.+ swap .+)$'
    replace: '#\1'

- name: Install additional required packages
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - curl

- name: Add Kubernetes GPG key
  become: yes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg

- name: Add Kubernetes apt repository
  become: yes
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    update_cache: true
    filename: kubernetes.list

- name: Update and install Kubernetes components
  become: yes
  register: apt_state
  until: apt_state is success
  delay: 30
  retries: 10
  apt:
    name: "{{ item }}"
    state: present
    force_apt_get: yes
    update_cache: yes
  vars:
    version: "1.26.3-00"
  loop:
    - kubectl={{ version }}
    - kubelet={{ version }}
    - kubeadm={{ version }}

- name: Create k8s config file
  become: yes
  copy:
    content: |
      br_netfilter
    dest: /etc/modules-load.d/k8s.conf

- name: Create k8s sysctl config
  become: yes
  copy:
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
    dest: /etc/sysctl.d/k8s.conf

- name: Flush iptables
  become: yes
  command: iptables --flush

- name: Flush iptables NAT table
  become: yes
  command: iptables -tnat --flush

- name: Apply sysctl settings again
  become: yes
  command: sysctl --system
